{"ast":null,"code":"var _jsxFileName = \"/home/clindsley/Development/Code/phase-4/revenue-tracker/client/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport Sales from \"./Sales\";\nimport Products from \"./Products\";\nimport Stores from \"./Stores\";\nimport { Switch, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [salesArray, setSalesArray] = useState([]);\n  const [storesArray, setStoresArray] = useState([]);\n  const [productsArray, setProductsArray] = useState([]);\n  const [inventoryByStore, setInventoryByStore] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/sales\").then(resp => resp.json()).then(data => setSalesArray(data));\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/stores\").then(resp => resp.json()).then(data => setStoresArray(data));\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/products\").then(resp => resp.json()).then(data => setProductsArray(data));\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/1/stores/1\").then(resp => resp.json()).then(data => setInventoryByStore(data));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/sales\",\n        children: /*#__PURE__*/_jsxDEV(Sales, {\n          salesArray: salesArray,\n          setSalesArray: setSalesArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/stores\",\n        children: /*#__PURE__*/_jsxDEV(Stores, {\n          storesArray: storesArray,\n          setStoresArray: setStoresArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/products\",\n        children: /*#__PURE__*/_jsxDEV(Products, {\n          productsArray: productsArray,\n          setProductsArray: setProductsArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"7YC/710YwkyqTAKcjFZqlJB0cNk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NavBar","Sales","Products","Stores","Switch","Route","jsxDEV","_jsxDEV","App","_s","salesArray","setSalesArray","storesArray","setStoresArray","productsArray","setProductsArray","inventoryByStore","setInventoryByStore","fetch","then","resp","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","_c","$RefreshReg$"],"sources":["/home/clindsley/Development/Code/phase-4/revenue-tracker/client/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport Sales from \"./Sales\";\nimport Products from \"./Products\";\nimport Stores from \"./Stores\";\nimport { Switch, Route } from 'react-router-dom';\n\nfunction App() {\n\n    const [salesArray, setSalesArray] = useState([])\n    const [storesArray, setStoresArray] = useState([])\n    const [productsArray, setProductsArray] = useState([])\n    const [inventoryByStore, setInventoryByStore] = useState([])\n\n    useEffect(() => {\n        fetch(\"http://localhost:3000/sales\")\n        .then(resp=>resp.json())\n        .then((data)=>(setSalesArray(data)))\n\n    }, [])\n\n    useEffect(() => {\n        fetch(\"http://localhost:3000/stores\")\n        .then(resp=>resp.json())\n        .then((data)=>(setStoresArray(data)))\n\n    }, [])\n\n    useEffect(() => {\n        fetch(\"http://localhost:3000/products\")\n        .then(resp=>resp.json())\n        .then((data)=>(setProductsArray(data)))\n\n    }, [])\n\n    useEffect(() => {\n        fetch(\"http://localhost:3000/1/stores/1\")\n        .then(resp=>resp.json())\n        .then((data)=>(setInventoryByStore(data)))\n\n    })\n\n    return (\n        <div className=\"App\">\n            <NavBar />\n            <Switch>\n                <Route exact path=\"/sales\">\n                    <Sales salesArray={salesArray} setSalesArray={setSalesArray} />\n                </Route>\n                <Route exact path=\"/stores\">\n                    <Stores storesArray={storesArray} setStoresArray={setStoresArray} />\n                </Route>\n                <Route exact path=\"/products\">\n                    <Products productsArray={productsArray} setProductsArray={setProductsArray} />\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEX,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACZoB,KAAK,CAAC,6BAA6B,CAAC,CACnCC,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAAEG,IAAI,IAAIX,aAAa,CAACW,IAAI,CAAE,CAAC;EAExC,CAAC,EAAE,EAAE,CAAC;EAENxB,SAAS,CAAC,MAAM;IACZoB,KAAK,CAAC,8BAA8B,CAAC,CACpCC,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAAEG,IAAI,IAAIT,cAAc,CAACS,IAAI,CAAE,CAAC;EAEzC,CAAC,EAAE,EAAE,CAAC;EAENxB,SAAS,CAAC,MAAM;IACZoB,KAAK,CAAC,gCAAgC,CAAC,CACtCC,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAAEG,IAAI,IAAIP,gBAAgB,CAACO,IAAI,CAAE,CAAC;EAE3C,CAAC,EAAE,EAAE,CAAC;EAENxB,SAAS,CAAC,MAAM;IACZoB,KAAK,CAAC,kCAAkC,CAAC,CACxCC,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAAEG,IAAI,IAAIL,mBAAmB,CAACK,IAAI,CAAE,CAAC;EAE9C,CAAC,CAAC;EAEF,oBACIf,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBjB,OAAA,CAACP,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrB,OAAA,CAACH,MAAM;MAAAoB,QAAA,gBACHjB,OAAA,CAACF,KAAK;QAACwB,KAAK;QAACC,IAAI,EAAC,QAAQ;QAAAN,QAAA,eACtBjB,OAAA,CAACN,KAAK;UAACS,UAAU,EAAEA,UAAW;UAACC,aAAa,EAAEA;QAAc;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACRrB,OAAA,CAACF,KAAK;QAACwB,KAAK;QAACC,IAAI,EAAC,SAAS;QAAAN,QAAA,eACvBjB,OAAA,CAACJ,MAAM;UAACS,WAAW,EAAEA,WAAY;UAACC,cAAc,EAAEA;QAAe;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eACRrB,OAAA,CAACF,KAAK;QAACwB,KAAK;QAACC,IAAI,EAAC,WAAW;QAAAN,QAAA,eACzBjB,OAAA,CAACL,QAAQ;UAACY,aAAa,EAAEA,aAAc;UAACC,gBAAgB,EAAEA;QAAiB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACnB,EAAA,CAnDQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}